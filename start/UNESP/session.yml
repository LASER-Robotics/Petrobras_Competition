name: simulation
root: ./
startup_window: status
pre_window: export UAV_NAME=uav1; export WORLD_FILE=./world.yaml; export RUN_TYPE=simulation; export UAV_TYPE=f450; export WORLD_NAME=simulation; export SENSORS="garmin_down;"
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch competition_petrobras UNESP.launch
  - status:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-rangefinder-up --enable-rplidar --enable-ground-truth --enable-bluefox-camera --pos_file `pwd`/uav1_pos.yaml --enable-rplidar"
  - control:
      layout: tiled
      panes:
        - "waitForOdometry; roslaunch mrs_uav_general core.launch config_uav_manager:=./custom_configs/uav_manager.yaml"
  - takeoff:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
  - AutomaticStart:
      layout: tiled
      panes:        
        - 'waitForControl;
          rosservice call /uav1/control_manager/use_safety_area \"data: false\";
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
  - goto:
      layout: tiled
      panes:
        - 'history -s rosservice call /$UAV_NAME/control_manager/goto_relative \"goal: \[-0.0, 0.0, 0.0, 0.0\]\"'

